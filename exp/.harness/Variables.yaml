pipeline:
  name: Variables
  identifier: Variables
  projectIdentifier: RajathaTest2
  orgIdentifier: default
  tags: {}
  stages:
    - stage:
        name: Ci Test Outputs
        identifier: Ci_Test_Outputs
        type: CI
        spec:
          cloneCodebase: false
          infrastructure:
            type: KubernetesDirect
            spec:
              connectorRef: rajathak8
              namespace: rajatha-delegate-april
              automountServiceAccountToken: true
              nodeSelector: {}
              os: Linux
          execution:
            steps:
              - step:
                  type: Run
                  name: Create Dockerfile
                  identifier: Create_Dockerfile
                  spec:
                    connectorRef: dockerrajatha
                    image: busybox
                    shell: Sh
                    command: echo "FROM busybox" > Dockerfile
              - step:
                  type: BuildAndPushDockerRegistry
                  name: Build and Push
                  identifier: Build_and_Push
                  spec:
                    connectorRef: dockerrajatha
                    repo: rajatharanganath/ciquickstart
                    tags:
                      - latest
              - step:
                  type: Run
                  name: Echo Tag
                  identifier: Echo_Tag
                  spec:
                    connectorRef: dockerrajatha
                    image: alpine
                    shell: Sh
                    command: echo "<+pipeline.stages.Ci_Test_Outputs.spec.execution.steps.Build_and_Push.artifact-Build_and_Push.stepArtifacts.publishedImageArtifacts[0].tag>"
              - step:
                  type: Run
                  name: echo tag 2
                  identifier: echo_tag_2
                  spec:
                    connectorRef: dockerrajatha
                    image: alpine
                    shell: Sh
                    command: |
                      echo <+pipeline.stages.Ci_Test_Outputs.spec.execution.steps.Build_and_Push["artifact-Build_and_Push"].stepArtifacts.publishedImageArtifacts[0].tag>
    - stage:
        name: stg2
        identifier: stg2
        description: ""
        type: Deployment
        spec:
          serviceConfig:
            serviceRef: lscjf
            serviceDefinition:
              spec:
                variables: []
              type: Kubernetes
          infrastructure:
            environmentRef: dev
            infrastructureDefinition:
              type: KubernetesDirect
              spec:
                connectorRef: rajathak8
                namespace: rajatha-delegate-april
                releaseName: release-<+INFRA_KEY>
            allowSimultaneousDeployments: false
          execution:
            steps:
              - step:
                  type: ShellScript
                  name: step1
                  identifier: step1
                  spec:
                    shell: Bash
                    onDelegate: true
                    source:
                      type: Inline
                      spec:
                        script: echo test
                    environmentVariables: []
                    outputVariables: []
                    executionTarget: {}
                  timeout: 10m
              - step:
                  type: ShellScript
                  name: step2
                  identifier: step2
                  spec:
                    shell: Bash
                    onDelegate: true
                    source:
                      type: Inline
                      spec:
                        script: echo <+execution.steps.step1.timeout>
                    environmentVariables: []
                    outputVariables: []
                    executionTarget: {}
                  timeout: 10m
            rollbackSteps:
              - step:
                  name: Rollback Rollout Deployment
                  identifier: rollbackRolloutDeployment
                  type: K8sRollingRollback
                  timeout: 10m
                  spec: {}
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
