pipeline:
    name: test2tractable
    identifier: test2tractable
    projectIdentifier: RajathaTest2
    orgIdentifier: default
    tags: {}
    properties:
        ci:
            codebase:
                connectorRef: githubrajatha
                build: <+input>
    stages:
        - stage:
              name: build
              identifier: build
              type: CI
              spec:
                  cloneCodebase: true
                  infrastructure:
                      type: KubernetesDirect
                      spec:
                          connectorRef: rajathak8
                          namespace: rajatha-delegate-april
                          runAsUser: ""
                          automountServiceAccountToken: true
                          nodeSelector: {}
                          containerSecurityContext:
                              allowPrivilegeEscalation: false
                              runAsUser: ""
                  execution:
                      steps:
                          - step:
                                type: Run
                                name: run
                                identifier: run
                                spec:
                                    connectorRef: dockerrajatha
                                    image: golang:1.15
                                    shell: Sh
                                    command: |
                                        #!/bin/sh
                                        echo <+codebase.targetBranch>
                                        echo <+codebase.sourceBranch>
                                        LATEST_BRANCH="master"
                                        if [ <+codebase.targetBranch> == "master" ]
                                        then
                                            LATEST_BRANCH="heelotag, master"
                                        else
                                            LATEST_BRANCH="hellotag, non-master"
                                        fi
                                        export LATEST_BRANCH
                                    outputVariables:
                                        - name: LATEST_BRANCH
        - stage:
              name: stg2
              identifier: stg2
              type: CI
              spec:
                  cloneCodebase: false
                  infrastructure:
                      useFromStage: build
                  execution:
                      steps:
                          - step:
                                type: Run
                                name: stg2
                                identifier: stg2
                                spec:
                                    connectorRef: dockerrajatha
                                    image: alpine
                                    shell: Sh
                                    command: echo <+pipeline.stages.build.spec.execution.steps.run.output.outputVariables.LATEST_BRANCH>
