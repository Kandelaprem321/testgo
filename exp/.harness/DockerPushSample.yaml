pipeline:
    name: DockerPushSample2
    identifier: DockerPushSample
    allowStageExecutions: false
    projectIdentifier: RajathaTest2
    orgIdentifier: default
    tags: {}
    properties:
        ci:
            codebase:
                connectorRef: githubrajatha
                build: <+input>
    stages:
        - stage:
              name: build
              identifier: build
              type: CI
              spec:
                  cloneCodebase: true
                  infrastructure:
                      type: KubernetesDirect
                      spec:
                          connectorRef: rajathak8
                          namespace: rajatha-delegate-april
                          automountServiceAccountToken: true
                          nodeSelector: {}
                          containerSecurityContext:
                              allowPrivilegeEscalation: false
                              runAsUser: "1000"
                  execution:
                      steps:
                          - step:
                                type: Run
                                name: run
                                identifier: run
                                spec:
                                    connectorRef: dockerrajatha
                                    image: golang:1.15
                                    shell: Bash
                                    command: |-
                                        

                                        go get gotest.tools/gotestsum
                                        gotestsum --format=standard-verbose --junitfile unit-tests.xml || true
                                        CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -tags netgo
                                    reports:
                                        type: JUnit
                                        spec:
                                            paths:
                                                - "*.xml"
                                    outputVariables:
                                        - name: LATEST_BRANCH
                          - step:
                                type: BuildAndPushDockerRegistry
                                name: build and push
                                identifier: build_and_push
                                spec:
                                    connectorRef: dockerrajatha
                                    repo: rajatharanganath/ciquickstart
                                    tags:
                                        - <+pipeline.sequenceId>
        - stage:
              name: stg2
              identifier: stg2
              type: CI
              spec:
                  cloneCodebase: true
                  infrastructure:
                      useFromStage: build
                  execution:
                      steps:
                          - step:
                                type: Run
                                name: stg2
                                identifier: stg2
                                spec:
                                    connectorRef: dockerrajatha
                                    image: alpine
                                    shell: Sh
                                    command: echo <+pipeline.stages.build.spec.execution.steps.run.output.outputVariables.LATEST_BRANCH>
