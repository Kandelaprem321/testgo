pipeline:
  name: Tratable replica
  identifier: Tratable_replica
  projectIdentifier: RajathaTest2
  orgIdentifier: default
  tags: {}
  stages:
    - stage:
        name: Build and Push
        identifier: Build
        type: CI
        spec:
          cloneCodebase: true
          infrastructure:
            type: KubernetesDirect
            spec:
              connectorRef: account.K8S_nextgen_Connector
              namespace: harness-build
              automountServiceAccountToken: true
              nodeSelector: {}
          execution:
            steps:
              - parallel:
                  - step:
                      type: Run
                      name: Create Docker file
                      identifier: Create_Docker_file
                      spec:
                        connectorRef: account.Tractable_Docker_Hub
                        image: alpine:latest
                        shell: Sh
                        command: |-
                          cat <<EOF > Dockerfile
                          FROM ubuntu:22.04

                          # Disable graphical installers
                          ENV DEBIAN_FRONTEND noninteractive

                          # Use root user
                          USER root
                          # But change default shell to bash for asdf
                          RUN chsh -s /bin/bash root

                          # Update packages
                          # Install Bash support for asdf
                          # Install libraries to compile python
                          # Install other requirements
                          # Remove package lists
                          RUN apt-get update && apt-get install --no-install-recommends -y \
                              libuser bash bash-completion \
                              make patch build-essential zlib1g-dev libssl-dev libbz2-dev libreadline-dev libsqlite3-dev llvm libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev \
                              curl git unzip ca-certificates && \
                              apt-get clean && rm -rf /var/lib/apt/lists/*

                          # Install aws-cli
                          RUN curl -sS "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" && \
                              unzip -qq awscliv2.zip && \
                              ./aws/install

                          # RUN adduser --gecos "" --shell /bin/bash --home /tractable --disabled-password tractable
                          # USER tractable
                          # ONBUILD USER tractable
                          # WORKDIR /tractable

                          # Installing asdf
                          # Sourcing asdf every way possible
                          SHELL ["/bin/bash", "-c"]
                          RUN git -c "advice.detachedHead=false" clone "https://github.com/asdf-vm/asdf.git" "$HOME/.asdf" --branch v0.10.0 && \
                              chmod +x $HOME/.asdf/asdf.sh && \
                              echo -e "\nsource $HOME/.asdf/asdf.sh" >> ~/.bashrc && \
                              echo -e "\nsource $HOME/.asdf/asdf.sh" >> ~/.profile && \
                              source "$HOME/.asdf/asdf.sh"
                          # Harness will overwrite/have their own .bashrc therefore we are using the BASH_ENV to source
                          # Also, the USER directive doesn't apply to ENV directives and we can't use $HOME
                          ENV BASH_ENV="/root/.asdf/asdf.sh"

                          # Activate asdf
                          # Add asdf python plugin
                          # Set a system python version

                          # Install a bunch of stable latest python versions
                              #asdf install python latest:3.6 && asdf global python latest:3.6 && \
                              #asdf install python latest:3.7 && \
                              #asdf install python latest:3.8 && \
                              #asdf install python latest:3.9 && \

                          RUN source "$HOME/.asdf/asdf.sh" && \
                              asdf plugin add python && \
                              asdf plugin add poetry && \
                              asdf install python latest:<+pipeline.stages.Build.variables.DEFAULT_PYTHON_VERSION> && \
                              asdf global python latest:<+pipeline.stages.Build.variables.DEFAULT_PYTHON_VERSION> && \
                              asdf install poetry 1.1.13 && \
                              asdf global poetry 1.1.13 && \    
                              cat $HOME/.tool-versions

                          # List all program versions
                          RUN source "$HOME/.asdf/asdf.sh" && \
                              aws --version && \
                              git --version && \
                              asdf --version && \
                              python --version

                          # Switch default user away from root
                          # I want people to be aware they are using root
                          USER nobody

                          # Start the container like this
                          # docker run --rm -it --entrypoint /bin/bash --user 0 tractableio/asdf-python-aws-git:
                          EOF
                          cat Dockerfile
                  - step:
                      name: step2
                      identifier: step2
                      template:
                        templateRef: Generate_Tag
                        versionLabel: "1.0"
                        templateInputs:
                          type: Run
                          spec:
                            envVariables:
                              TAG_PREFIX: <+input>
                              DOCKER_IMAGE: <+input>
                              TAG_OVERRIDE: <+input>
                              ADD_GIT_TAG: <+input>
                          when:
                            condition: <+input>
              - step:
                  type: BuildAndPushDockerRegistry
                  name: Docker build and push
                  identifier: Docker_build_and_push
                  spec:
                    connectorRef: account.Tractable_Docker_Hub_v1
                    repo: tractableio/asdf-python-aws-git
                    tags:
                      - python-<+pipeline.stages.Build.variables.DEFAULT_PYTHON_VERSION>
                      - <+pipeline.stages.Build.spec.execution.steps.Generate_Docker_Tag.output.outputVariables.DOCKER_TAG>
                    remoteCacheRepo: tractableio/asdf-python-aws-git-cache
                    resources:
                      limits:
                        memory: 10Gi
                        cpu: "10"
                  failureStrategies:
                    - onFailure:
                        errors:
                          - AllErrors
                        action:
                          type: Retry
                          spec:
                            retryCount: 2
                            retryIntervals:
                              - 1s
                              - 1m
                            onRetryFailure:
                              action:
                                type: Abort
        when:
          pipelineStatus: All
        variables:
          - name: DEFAULT_PYTHON_VERSION
            type: String
            default: "3.6"
            value: <+input>
    - stage:
        name: Test Image
        identifier: Test_Image
        type: CI
        spec:
          cloneCodebase: false
          infrastructure:
            useFromStage: Build
          execution:
            steps:
              - step:
                  type: Run
                  name: List program versions
                  identifier: List_program_versions
                  spec:
                    connectorRef: account.Tractable_Docker_Hub
                    image: <+pipeline.stages.Build.spec.execution.steps.Generate_Docker_Tag.output.outputVariables.DOCKER_IMAGE_WITH_TAG>
                    shell: Bash
                    command: |
                      whoami
                      printenv

                      ls -al /root/.asdf

                      git --version
                      aws --version
                      asdf --version
                      python --version
                    imagePullPolicy: Always
                    runAsUser: "0"
        failureStrategies:
          - onFailure:
              errors:
                - Timeout
              action:
                type: Retry
                spec:
                  retryCount: 1
                  onRetryFailure:
                    action:
                      type: Abort
  allowStageExecutions: false
  properties:
    ci:
      codebase:
        connectorRef: account.Github_via_SSH_ECDSA_key
        repoName: harness-base-docker-images
        build: <+input>
  notificationRules:
    - name: On Pipeline Errors
      pipelineEvents:
        - type: PipelineFailed
      notificationMethod:
        type: Slack
        spec:
          userGroups: []
          webhookUrl: https://hooks.slack.com/services/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
      enabled: true
